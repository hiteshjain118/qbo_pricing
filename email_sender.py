from datetime import datetime
import logging
import os

import pytz
import requests
import resend
from logging_config import setup_logging

# Setup logging
setup_logging()
logger = logging.getLogger(__name__)

resend.api_key = os.getenv('RESEND_API_KEY')

class CompanyEmailSender:
    def __init__(self, email_to: str, subject: str, report_html: str, company_id: str):
        self.email_to = email_to
        self.subject = subject
        self.report_html = report_html
        self.company_id = company_id
        
    def send_email(self) -> bool:
        return self.send_using_mailgun()
    
    def send_using_resend(self) -> bool:
        logger.info(
            f"Sending email with resend to {self.email_to}"
            f"with subject {self.subject}"
            f"and report html {self.report_html}"
        )
        
        try:
            response = resend.Emails.send({
                "from": "QBO Reports <onboarding@resend.dev>",
                "to": [self.email_to],
                "subject": self.subject,
                "html": self.get_email_html()
                })
            return response is not None
        except Exception as e:
            logger.error(f"Error sending email: {e}")
            raise e

    def get_email_html(self):
        return f"""
<html>  
<body>
QuickBooks Report for {self.company_id}

Generated: {datetime.now().astimezone(pytz.timezone('America/Los_Angeles')).strftime('%Y-%m-%d %H:%M:%S')}

{self.report_html}

---
This report was automatically generated by the QBO Report Scheduler.
</body>
</html>
        """
    
    def send_using_mailgun(self) -> bool:
        logger.info(
            f"Sending email with mailgun to {self.email_to}"
            f"with subject {self.subject}"
            f"and report html {len(self.report_html)} chars"
        )
        try:
            domain = "coralbricks.ai"
            response = requests.post(
                f"https://api.mailgun.net/v3/{domain}/messages",
                auth=("api", os.getenv('MAILGUN_API_KEY', 'API_KEY')),
                data={
                    "from": f"QBO Reports <noreply@{domain}>",
                    "to": self.email_to,
                    "subject": self.subject,
                    "html": self.get_email_html()
                }
            )
            logger.info(f"Mailgun response: {response.json()}")
            return response.json().get('message') == 'Queued. Thank you.'
        except Exception as e:
            logger.error(f"Error sending email: {e}")
            raise e